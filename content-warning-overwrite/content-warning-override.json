{
    "actions": {
        "content warning override": {
            "enabled": true,
            "exec": "/**\n * @version 1.1\n */\n\n// Action trigger: document modified\n\n/*! settings begin */\nvar // Use HTML 5 player.\n\tuseHtml5 = false,\n\t// Auto update player configuration (highly recommended).\n\t// When this option is enabled player configuration will be updated\n\t// when watching video which is not blocked. This data will be used\n\t// later to write player when it's unavailable. Local storage should\n\t// be enabled so player configuration can be stored.\n\tautoUpdatePlayerConfig = true,\n/*! settings end */\n\n\tplayerConfig = {\n\t\tassets: {\n\t\t\tcss: \"http://s.ytimg.com/yts/cssbin/www-player-vflaVD8ra.css\",\n\t\t\tcss_actions: \"http://s.ytimg.com/yts/cssbin/www-player-actions-vflympOE_.css\",\n\t\t\thtml: \"/html5_player_template\",\n\t\t\tjs: \"http://s.ytimg.com/yts/jsbin/html5player-vfll3tTgx.js\"\n\t\t},\n\t\thtml5: false,\n\t\tmin_version: \"8.0.0\",\n\t\tparams: {\n\t\t\tallowfullscreen: \"true\",\n\t\t\tallowscriptaccess: \"always\",\n\t\t\tbgcolor: \"#000000\"\n\t\t},\n\t\turl: \"http://s.ytimg.com/yts/swfbin/watch_as3-vfl-KqBih.swf\",\n\t\turl_v8: \"http://s.ytimg.com/yts/swfbin/cps-vflHR5M3s.swf\",\n\t\turl_v9as2: \"http://s.ytimg.com/yts/swfbin/cps-vflHR5M3s.swf\"\n\t},\n\tplayer = document.querySelector(\"#player-api\"),\n\tstyle\n\nif (!xtt.video.isWatch || !player)\n\treturn\n\nif (player && !player.querySelector(\"[id*=\\\"player-unavailable\\\"]\")) {\n\tif (autoUpdatePlayerConfig)\n\t\tupdatePlayerConfig()\n\n\treturn\n}\n\nstyle = document.createElement(\"style\")\nstyle.setAttribute(\"type\", \"text/css\")\nstyle.dataset.styleFor = \"ext-action-cw-override\"\nstyle.textContent = \"\\\n.ext-action-cw-override {\\n\\\n\tmargin: 20px 0;\\n\\\n}\\n\"\ndocument.querySelector(\"head\").appendChild(style)\n\naddButton(player.querySelector(\".content\"))\n\nfunction addButton(node) {\n\tif (!node)\n\t\treturn\n\n\tvar button = createButton({\n\t\t\t\"class\": \"yt-uix-button yt-uix-button-primary yt-uix-tooltip ext-action-cw-override\",\n\t\t\t\"data-tooltip-text\": \"Try to override this message\"\n\t\t}),\n\t\tvideoId = getVideoId()\n\n\tbutton.textContent = \"Override content warning\"\n\tbutton.addEventListener(\"click\", function () {\n\t\tfetchArgs(videoId)\n\t}, false)\n\tnode.appendChild(button)\n\n\tif (!videoId) {\n\t\tshowMessage(\"Unable to get video ID.\")\n\t\tbutton.disabled = true\n\t\treturn\n\t}\n}\n\nfunction createButton(attribute) {\n\tvar button = document.createElement(\"button\")\n\n\tObject.keys(attribute).forEach(function (property) {\n\t\tbutton.setAttribute(property, attribute[property])\n\t})\n\n\treturn button\n}\n\nfunction fetchArgs(videoId) {\n\tshowMessage(\"Requesting video arguments...\")\n\tvar xhr = new window.XMLHttpRequest()\n\n\txhr.open(\"get\", \"http://www.youtube.com/get_video_info?el=popout&video_id=\" + videoId, true)\n\txhr.onreadystatechange = function () {\n\t\tif (xhr.readyState != 4)\n\t\t\treturn\n\n\t\tvar buttonContainer = xtt.ui.add.downloadButton(),\n\t\t\targs = decodeArgs(xhr.responseText)\n\n\t\tif (args.status == \"fail\")\n\t\t\treturn showMessage(args.reason.replace(/\\+/g, \" \"))\n\n\t\tshowMessage(\"Player arguments fetched.\")\n\n\t\tyt.playerConfig = getPlayerConfig(args)\n\n\t\tif (buttonContainer) {\n\t\t\tbuttonContainer = buttonContainer.parentNode\n\t\t\txtt.ui.remove.downloadButton()\n\t\t\txtt.ui.add.downloadButton(buttonContainer)\n\t\t}\n\n\t\tshowMessage(\"Attempting to write player...\")\n\n\t\tyt.player.embed(\"player-api\", yt.playerConfig)\n\t}\n\txhr.send()\n}\n\nfunction getVideoId() {\n\treturn yt.config_.VIDEO_ID\n}\n\nfunction decodeArgs(args) {\n\targs = args.split(\"&\").reduce(function (previous, current) {\n\t\tcurrent = current.split(\"=\")\n\t\tprevious[current[0]] = current[1] && decodeURIComponent(current[1])\n\n\t\treturn previous\n\t}, {})\n\n\treturn args\n}\n\nfunction showMessage(message) {\n\tvar msgBox = player.querySelector(\".ext-action-cwo-message\")\n\n\tif (!msgBox) {\n\t\tmsgBox = document.createElement(\"p\")\n\t\tmsgBox.classList.add(\"ext-action-cwo-message\")\n\t\tplayer.querySelector(\".ext-action-cw-override\").insertAdjacentElement(\"afterend\", msgBox)\n\t}\n\n\tmsgBox.textContent = message\n}\n\nfunction getPlayerConfig(args) {\n\tvar config = window.localStorage[\"ext-action-cwo-player-config\"]\n\n\tif (config)\n\t\tconfig = JSON.parse(config)\n\n\tif (!config || !config.assets || !config.url)\n\t\tconfig = playerConfig\n\n\tconfig.html5 = useHtml5\n\tconfig.args = args\n\n\treturn config\n}\n\nfunction updatePlayerConfig() {\n\tif (!yt.playerConfig || typeof yt.playerConfig != \"object\")\n\t\treturn\n\n\tvar config = {}\n\tObject.keys(yt.playerConfig).forEach(function (key) {\n\t\tif (key != \"args\")\n\t\t\tconfig[key] = yt.playerConfig[key]\n\t})\n\n\twindow.localStorage[\"ext-action-cwo-player-config\"] = JSON.stringify(config)\n}\n",
            "trigger": "doc modified"
        }
    }
}
