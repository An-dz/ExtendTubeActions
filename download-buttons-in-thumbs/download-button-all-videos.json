{
    "actions": {
        "download button to all thumbnails": {
            "enabled": true,
            "exec": "/**\n * @version 1.5\n */\n\n// Action trigger: DOM created\n\n/*! settings begin */\nvar format = [\n\t\t// Remove formats you wish not to be shown in menu.\n\t\t\"5\",   // 240p\n\t\t\"6\",   // 270p\n\t\t\"17\",  // Mobile (low)\n\t\t\"18\",  // Medium\n\t\t\"22\",  // HD 720p\n\t\t\"34\",  // 360p\n\t\t\"35\",  // 480p\n\t\t\"36\",  // Mobile (high)\n\t\t\"37\",  // HD 1080p\n\t\t\"38\",  // Extra HD 4K\n\t\t\"43\",  // WebM 360p\n\t\t\"44\",  // WebM 480p\n\t\t\"45\",  // WebM 720p\n\t\t\"46\",  // WebM 1080p\n\t\t\"82\",  // 360p 3D\n\t\t\"83\",  // 480p 3D\n\t\t\"84\",  // HD 720p 3D\n\t\t\"85\",  // HD 1080p 3D\n\t\t\"100\", // WebM 360p 3D\n\t\t\"101\", // WebM 480p 3D\n\t\t\"102\", // WebM 720p 3D\n\t\t\"103\"  // WebM 1080p 3D\n\t],\n/*! settings end */\n\n\tvideoFormat = widget.preferences.videoFormat,\n\tstyle = document.createElement(\"style\"),\n\tthumbs = document.querySelectorAll(\"a[href*=\\\"/watch?v=\\\"]\")\n\nif (videoFormat)\n\tvideoFormat = window.JSON.parse(videoFormat)\nelse\n\treturn\n\nstyle.setAttribute(\"type\", \"text/css\")\nstyle.dataset.styleFor = \"ext-action-download-all\"\nstyle.textContent = \"\\\n.ext-action-download-button,\\n\\\n.ext-action-download-button:active,\\n\\\n.ext-action-download-button:hover {\\n\\\n\tposition: absolute;\\n\\\n\tbottom: 0;\\n\\\n\tleft: 0;\\n\\\n\twidth: 22px;\\n\\\n\theight: 22px;\\n\\\n\tdisplay: none;\\n\\\n\tpadding: 0;\\n\\\n}\\n\\\n.video-list-item .ext-action-download-button {\\n\\\n\tleft: 5px;\\n\\\n}\\n\\\n.video-response .ext-action-download-button {\\n\\\n\tbottom: -1px;\\n\\\n}\\n\\\n.ext-action-download-button-container:hover .ext-action-download-button,\\n\\\n.ext-action-download-button.yt-uix-button-active {\\n\\\n\tdisplay: block;\\n\\\n}\\n\\\n.ext-action-download-button-container {\\n\\\n\tposition: relative;\\n\\\n\tdisplay: block;\\n\\\n}\\n\\\n.ext-action-download-button img {\\n\\\n\twidth: 10px;\\n\\\n\theight: 12px;\\n\\\n\tbackground-image: url(\\\"data:image/png;base64,\\\niVBORw0KGgoAAAANSUhEUgAAAAoAAAAYCAYAAADDLGwtAAAABmJLR0QA/wD/AP+gvaeTAAAACXBI\\\nWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3QIOCRMqTe4yyQAAAUNJREFUKM/Nkb1KQ0EQhb+5u1xy\\\nISoIauwUe0HQl/ARfAAl3CYosUijBMHGl/AFxN7XCDYSf0oLQbDQ6L05NptkTeJP6cAwe2bOLnP2\\\nGKNYAZrAfMDPwBnQBfARcRbYBBYBAU/A3GAYE/tAD3gLuBd6E0SLkqgCkPDHSL57YaxnSVgc4GMK\\\nsQhVHlgC1oEFwEUkB2wANaDjgspdYD+sopAVYDtcunCheRUGW0AZhhXgPJjQJ0lGwrMsa6Vp+pCm\\\n6X2WZSdDxQNOnuex4j3gYADq9boBmCTMDEmrRVEce++rgIqiePXet83sRtIXZ6re+7WyLJcl4b1/\\\nBKrTLBTQd869R97rP3htZr96bWbykn70WlIN6JgkB5wCO8BLpNSAGeASaIz+RmpJ6kq6DnkrqR0T\\\n4vOhpLuQRxMcSUMgKZfUHO9/Amruj8Tpx/w1AAAAAElFTkSuQmCC \\\") !important;\\n\\\n}\\n\\\n.ext-light-icon .ext-action-download-button img {\\n\\\n\tbackground-position: 0 12px;\\n\\\n}\\n\"\ndocument.querySelector(\"head\").appendChild(style)\n\nArray.prototype.forEach.call(thumbs, function (thumb) {\n\tif (thumb.querySelector(\".video-thumb\"))\n\t\taddDownloadButton(thumb)\n})\n\nfunction addDownloadButton(node) {\n\tif (!node)\n\t\treturn\n\n\tvar button = createButton({\n\t\t\t\"class\": \"yt-uix-button yt-uix-button-default yt-uix-tooltip ext-action-download-button\",\n\t\t\t\"data-tooltip-text\": xtt.ll.getString(\"DOWNLOAD_VIDEO\")\n\t\t}),\n\t\tmenu = document.createElement(\"ul\"),\n\t\tvideoID = node.search.match(/\\bv=([^&]+)/)\n\n\tmenu.classList.add(\"yt-uix-button-menu\")\n\tbutton.appendChild(menu)\n\tbutton.addEventListener(\"click\", showDownloadMenu, false)\n\n\tif (videoID && videoID[1])\n\t\tbutton.dataset.videoId = videoID[1]\n\n\tnode.classList.add(\"ext-action-download-button-container\")\n\tnode.appendChild(button)\n}\n\nfunction createButton(attribute) {\n\tvar button = document.createElement(\"button\")\n\n\tObject.keys(attribute).forEach(function (property) {\n\t\tbutton.setAttribute(property, attribute[property])\n\t})\n\n\treturn button.appendChild(document.createElement(\"img\")), button\n}\n\nfunction showDownloadMenu(event) {\n\tevent.preventDefault()\n\n\tif (!this.dataset.hasMenu) {\n\t\tif (!this.dataset.videoId) {\n\t\t\taddDownloadMenuItem({\n\t\t\t\tformat: \"Error\",\n\t\t\t\turi: \"#\",\n\t\t\t\ttooltip: \"Invalid video ID.\"\n\t\t\t}, this.lastChild)\n\t\t\twindow.setTimeout(function () {\n\t\t\t\tevent.target.click()\n\t\t\t}, 100)\n\t\t}\n\t\telse\n\t\t\tfetchDownloadLinks(this.lastChild)\n\n\t\tthis.dataset.hasMenu = true\n\t}\n}\n\nfunction addDownloadMenuItem(item, menu) {\n\tvar link = document.createElement(\"a\"),\n\t\tmenuItem = document.createElement(\"li\")\n\n\tlink.classList.add(\"yt-uix-button-menu-item\")\n\tlink.textContent = item.format\n\tif (widget.preferences.usefallbacklinks)\n\t\tlink.href = window.decodeURIComponent(item.fallback)\n\telse\n\t\tlink.href = window.decodeURIComponent(item.uri)\n\tif (item.tooltip) {\n\t\tlink.dataset.tooltipText = item.tooltip\n\t\tlink.classList.add(\"yt-uix-tooltip\")\n\t}\n\n\tmenuItem.appendChild(link)\n\tmenu.appendChild(menuItem)\n}\n\nfunction fetchDownloadLinks(menu) {\n\tvar xhr = new window.XMLHttpRequest()\n\n\txhr.open(\"get\", \"http://www.youtube.com/get_video_info?el=popout&video_id=\" + menu.parentNode.dataset.videoId, true)\n\txhr.onreadystatechange = function () {\n\t\tif (xhr.readyState != 4)\n\t\t\treturn\n\n\t\tlist = decodeUrlList(xhr.responseText)\n\t\tif (!list || !list[0]) {\n\t\t\taddDownloadMenuItem({\n\t\t\t\tformat: \"Error\",\n\t\t\t\turi: \"#\",\n\t\t\t\ttooltip: \"Unable to find download links.\"\n\t\t\t}, menu)\n\t\t\tdelete this.dataset.hasMenu\n\t\t}\n\t\telse {\n\t\t\tlist.forEach(function (item) {\n\t\t\t\tif (format.indexOf(item.format) < 0)\n\t\t\t\t\treturn\n\n\t\t\t\titem.tooltip = videoFormat[item.format][1]\n\t\t\t\titem.format = videoFormat[item.format][0]\n\t\t\t\taddDownloadMenuItem(item, menu)\n\t\t\t})\n\t\t}\n\n\t\tmenu.parentNode.click()\n\t}\n\txhr.send()\n}\n\nfunction decodeUrlList(list) {\n\tvar title = list.match(/\\btitle=[^&]+/)\n\tlist = list.match(/\\burl_encoded_fmt_stream_map=([^&]+)/)\n\tif (!list || !list[1])\n\t\treturn\n\n\tif (!title || !title[0])\n\t\ttitle = \"unknown_title\"\n\telse\n\t\ttitle = title[0]\n\n\tlist = window.decodeURIComponent(list[1])\n\tlist = list.split(',').map(function (url) {\n\t\tvar itag = url.match(/itag=(\\d+)/),\n\t\t\tfallback = url.match(/fallback_host=([^&]+)/),\n\t\t\tsig = url.match(/sig=([^&]+)/),\n\t\t\titem = {}\n\n\t\tif (itag && itag[1])\n\t\t\titem.format = itag[1]\n\t\telse\n\t\t\titem.format = 0\n\n\t\turl = url.match(/url=([^&]+)/)\n\t\tif (url && url[1])\n\t\t\titem.uri = url[1] + \"&\" + title.replace(/[\\\\\\/:\\*\\?\"<>\\|]/g, \"\")\n\t\telse\n\t\t\treturn;\n\n\t\tif (!/signature%3D/.test(url))\n\t\t\tif (sig && sig[1])\n\t\t\t\titem.uri += \"%26signature%3D\" + sig[1]\n\n\t\tif (fallback && fallback[1])\n\t\t\titem.fallback = item.uri.replace(/(http%3A%2F%2F)[^%]+/, \"$1\" + fallback[1])\n\n\t\treturn item\n\t})\n\n\treturn list\n}\n",
            "trigger": "DOMContentLoaded"
        }
    }
}
